// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders arc 1`] = `
<div
  className="WalletGauge arc"
>
  <Gauge
    level={0.5}
    readingDecimalPart="00"
    readingIntegerPart="20"
    type="arc"
    unit="mLOG"
  />
  <div
    className="actions"
  >
    <Button
      onClick={[Function]}
      slim={true}
    >
      <Icon
        icon={
          Object {
            "id": "send",
          }
        }
      />
       Send
    </Button>
  </div>
  <Dialog
    actions={
      Array [
        Object {
          "buttonText": "Cancel",
          "buttonVariant": "secondary",
          "callback": [Function],
          "id": "cancel",
        },
        Object {
          "buttonText": "Transfer",
          "buttonVariant": "primary",
          "callback": [Function],
          "disabled": true,
          "id": "transfer",
        },
      ]
    }
    show={false}
    size="lg"
  >
    <h3>
      Transfer LOGs
    </h3>
    <FormGroup
      colors={
        Object {
          "background": "#0c163d",
          "borderColor": "#e6007a",
          "foreground": "#ffffff",
        }
      }
      control={
        <FormControl
          isInvalid={false}
          onChange={[Function]}
          placeholder="The beneficiary's SS58 address"
          type="text"
          value=""
        />
      }
      id="destination"
      label="Destination"
    />
    <FormGroup
      colors={
        Object {
          "background": "#0c163d",
          "borderColor": "#e6007a",
          "foreground": "#ffffff",
        }
      }
      control={
        <InputGroup
          hasValidation={true}
        >
          <FormControl
            isInvalid={false}
            onChange={[Function]}
            placeholder="The amount to transfer"
            type="text"
            value=""
          />
          <DropdownButton
            as={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "render": [Function],
              }
            }
            id="input-group-dropdown-1"
            title="LOG"
          >
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              LOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              mLOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              µLOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              nLOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              pLOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              fLOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              aLOG
            </DropdownItem>
          </DropdownButton>
          <Feedback
            type="invalid"
          >
            Please choose a username.
          </Feedback>
        </InputGroup>
      }
      id="amout"
      label="Amount"
      noFeedback={true}
    />
    <ExtrinsicSubmitter
      id="transferLogs"
      onError={[Function]}
      onSuccess={[Function]}
      signAndSubmit={null}
      successMessage="Transfer successful."
    />
  </Dialog>
</div>
`;

exports[`renders linear 1`] = `
<div
  className="WalletGauge linear"
>
  <Gauge
    level={0.5}
    readingDecimalPart="00"
    readingIntegerPart="20"
    type="linear"
    unit="mLOG"
  />
  <div
    className="actions"
  >
    <Button
      onClick={[Function]}
      slim={true}
    >
      <Icon
        icon={
          Object {
            "id": "send",
          }
        }
      />
       Send
    </Button>
  </div>
  <Dialog
    actions={
      Array [
        Object {
          "buttonText": "Cancel",
          "buttonVariant": "secondary",
          "callback": [Function],
          "id": "cancel",
        },
        Object {
          "buttonText": "Transfer",
          "buttonVariant": "primary",
          "callback": [Function],
          "disabled": true,
          "id": "transfer",
        },
      ]
    }
    show={false}
    size="lg"
  >
    <h3>
      Transfer LOGs
    </h3>
    <FormGroup
      colors={
        Object {
          "background": "#0c163d",
          "borderColor": "#e6007a",
          "foreground": "#ffffff",
        }
      }
      control={
        <FormControl
          isInvalid={false}
          onChange={[Function]}
          placeholder="The beneficiary's SS58 address"
          type="text"
          value=""
        />
      }
      id="destination"
      label="Destination"
    />
    <FormGroup
      colors={
        Object {
          "background": "#0c163d",
          "borderColor": "#e6007a",
          "foreground": "#ffffff",
        }
      }
      control={
        <InputGroup
          hasValidation={true}
        >
          <FormControl
            isInvalid={false}
            onChange={[Function]}
            placeholder="The amount to transfer"
            type="text"
            value=""
          />
          <DropdownButton
            as={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "render": [Function],
              }
            }
            id="input-group-dropdown-1"
            title="LOG"
          >
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              LOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              mLOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              µLOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              nLOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              pLOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              fLOG
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              aLOG
            </DropdownItem>
          </DropdownButton>
          <Feedback
            type="invalid"
          >
            Please choose a username.
          </Feedback>
        </InputGroup>
      }
      id="amout"
      label="Amount"
      noFeedback={true}
    />
    <ExtrinsicSubmitter
      id="transferLogs"
      onError={[Function]}
      onSuccess={[Function]}
      signAndSubmit={null}
      successMessage="Transfer successful."
    />
  </Dialog>
</div>
`;
