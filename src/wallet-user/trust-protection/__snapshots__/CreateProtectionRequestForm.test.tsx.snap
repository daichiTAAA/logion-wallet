// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders 1`] = `
<ContentPane
  mainTitle="My Logion Trust Protection"
  primaryAreaChildren={
    <React.Fragment>
      <Frame
        className="CreateProtectionRequestFormLegalOfficers"
        disabled={false}
      >
        <h3>
          Choose your Legal Officers
        </h3>
        <LegalOfficers
          legalOfficer1={null}
          legalOfficer2={null}
          legalOfficers={
            Array [
              Object {
                "address": "5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY",
                "details": "Modero Bruxelles
Central administration 
Nijverheidslaan 1
B - 1853 Grimbergen (Strombeek-Bever)
Belgium",
                "name": "Patrick Gielen",
              },
              Object {
                "address": "5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty",
                "details": "SELARL ADRASTEE
Gare des Brotteaux
14, place Jules Ferry
69006 LYON
France",
                "name": "Guillaume Grain",
              },
              Object {
                "address": "1234567890-abcd-5",
                "details": "Place de le République Française, 10",
                "name": "Alain Barland",
              },
              Object {
                "address": "1234567890-abcd-6",
                "details": "Place de le République Française, 10",
                "name": "Ronald Vanswijgenhoven",
              },
              Object {
                "address": "1234567890-abcd-7",
                "details": "Place de le République Française, 10",
                "name": "Thibaut Barnier",
              },
              Object {
                "address": "1234567890-abcd-8",
                "details": "Place de le République Française, 10",
                "name": "Jona Van Leeuwen",
              },
              Object {
                "address": "1234567890-abcd-9",
                "details": "Place de le République Française, 10",
                "name": "Carlos Calvo",
              },
              Object {
                "address": "1234567890-abcd-10",
                "details": "Place de le République Française, 10",
                "name": "Ilias Tsipos",
              },
              Object {
                "address": "1234567890-abcd-11",
                "details": "Place de le République Française, 10",
                "name": "Pedroso Leal",
              },
              Object {
                "address": "1234567890-abcd-12",
                "details": "Place de le République Française, 10",
                "name": "Marc Schmitz",
              },
            ]
          }
          mode="choose"
          setLegalOfficer1={[Function]}
          setLegalOfficer2={[Function]}
          status={null}
        />
      </Frame>
    </React.Fragment>
  }
  primaryPaneWidth={6}
  secondaryAreaChildren={
    <Frame
      className="CreateProtectionRequestFormOther"
      disabled={true}
    >
      <h3>
        Fill in your personal information
      </h3>
      <Alert
        variant="info"
      >
        This initial personal information sharing will start KYC process and will also be used in the context of a potential future recovery process.
      </Alert>
      <Form
        inline={false}
        onSubmit={[Function]}
      >
        <Row
          noGutters={false}
        >
          <Col
            md={6}
          >
            <FormGroup
              colors={
                Object {
                  "altBackground": "#eff3fe",
                  "background": "#ffffff",
                  "foreground": "#000000",
                  "link": "#3b6cf426",
                }
              }
              control={
                <Unknown
                  control={
                    Object {
                      "defaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldArrayDefaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldsRef": Object {
                        "current": Object {},
                      },
                      "formStateRef": Object {
                        "current": Object {
                          "dirtyFields": Object {},
                          "errors": Object {},
                          "isDirty": false,
                          "isSubmitSuccessful": false,
                          "isSubmitted": false,
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "submitCount": 0,
                          "touchedFields": Object {},
                        },
                      },
                      "getIsDirty": [Function],
                      "inFieldArrayActionRef": Object {
                        "current": false,
                      },
                      "namesRef": Object {
                        "current": Object {
                          "array": Set {},
                          "mount": Set {},
                          "unMount": Set {},
                          "watch": Set {},
                          "watchAll": false,
                        },
                      },
                      "readFormStateRef": Object {
                        "current": Object {
                          "dirtyFields": false,
                          "errors": "all",
                          "isDirty": false,
                          "isValid": false,
                          "isValidating": false,
                          "touchedFields": false,
                        },
                      },
                      "register": [Function],
                      "shouldUnmount": undefined,
                      "subjectsRef": Object {
                        "current": Object {
                          "array": ke {
                            "observers": Array [],
                          },
                          "control": ke {
                            "observers": Array [],
                          },
                          "state": ke {
                            "observers": Array [],
                          },
                          "watch": ke {
                            "observers": Array [],
                          },
                        },
                      },
                      "unregister": [Function],
                      "updateIsValid": [Function],
                      "watchInternal": [Function],
                    }
                  }
                  defaultValue=""
                  name="firstName"
                  render={[Function]}
                  rules={
                    Object {
                      "required": "The first name is required",
                    }
                  }
                />
              }
              id="firstName"
              label="First Name"
            />
          </Col>
          <Col
            md={6}
          >
            <FormGroup
              colors={
                Object {
                  "altBackground": "#eff3fe",
                  "background": "#ffffff",
                  "foreground": "#000000",
                  "link": "#3b6cf426",
                }
              }
              control={
                <Unknown
                  control={
                    Object {
                      "defaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldArrayDefaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldsRef": Object {
                        "current": Object {},
                      },
                      "formStateRef": Object {
                        "current": Object {
                          "dirtyFields": Object {},
                          "errors": Object {},
                          "isDirty": false,
                          "isSubmitSuccessful": false,
                          "isSubmitted": false,
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "submitCount": 0,
                          "touchedFields": Object {},
                        },
                      },
                      "getIsDirty": [Function],
                      "inFieldArrayActionRef": Object {
                        "current": false,
                      },
                      "namesRef": Object {
                        "current": Object {
                          "array": Set {},
                          "mount": Set {},
                          "unMount": Set {},
                          "watch": Set {},
                          "watchAll": false,
                        },
                      },
                      "readFormStateRef": Object {
                        "current": Object {
                          "dirtyFields": false,
                          "errors": "all",
                          "isDirty": false,
                          "isValid": false,
                          "isValidating": false,
                          "touchedFields": false,
                        },
                      },
                      "register": [Function],
                      "shouldUnmount": undefined,
                      "subjectsRef": Object {
                        "current": Object {
                          "array": ke {
                            "observers": Array [],
                          },
                          "control": ke {
                            "observers": Array [],
                          },
                          "state": ke {
                            "observers": Array [],
                          },
                          "watch": ke {
                            "observers": Array [],
                          },
                        },
                      },
                      "unregister": [Function],
                      "updateIsValid": [Function],
                      "watchInternal": [Function],
                    }
                  }
                  defaultValue=""
                  name="lastName"
                  render={[Function]}
                  rules={
                    Object {
                      "required": "The last name is required",
                    }
                  }
                />
              }
              id="lastName"
              label="Last Name"
            />
          </Col>
        </Row>
        <Row
          noGutters={false}
        >
          <Col
            md={6}
          >
            <FormGroup
              colors={
                Object {
                  "altBackground": "#eff3fe",
                  "background": "#ffffff",
                  "foreground": "#000000",
                  "link": "#3b6cf426",
                }
              }
              control={
                <Unknown
                  control={
                    Object {
                      "defaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldArrayDefaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldsRef": Object {
                        "current": Object {},
                      },
                      "formStateRef": Object {
                        "current": Object {
                          "dirtyFields": Object {},
                          "errors": Object {},
                          "isDirty": false,
                          "isSubmitSuccessful": false,
                          "isSubmitted": false,
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "submitCount": 0,
                          "touchedFields": Object {},
                        },
                      },
                      "getIsDirty": [Function],
                      "inFieldArrayActionRef": Object {
                        "current": false,
                      },
                      "namesRef": Object {
                        "current": Object {
                          "array": Set {},
                          "mount": Set {},
                          "unMount": Set {},
                          "watch": Set {},
                          "watchAll": false,
                        },
                      },
                      "readFormStateRef": Object {
                        "current": Object {
                          "dirtyFields": false,
                          "errors": "all",
                          "isDirty": false,
                          "isValid": false,
                          "isValidating": false,
                          "touchedFields": false,
                        },
                      },
                      "register": [Function],
                      "shouldUnmount": undefined,
                      "subjectsRef": Object {
                        "current": Object {
                          "array": ke {
                            "observers": Array [],
                          },
                          "control": ke {
                            "observers": Array [],
                          },
                          "state": ke {
                            "observers": Array [],
                          },
                          "watch": ke {
                            "observers": Array [],
                          },
                        },
                      },
                      "unregister": [Function],
                      "updateIsValid": [Function],
                      "watchInternal": [Function],
                    }
                  }
                  defaultValue=""
                  name="email"
                  render={[Function]}
                  rules={
                    Object {
                      "required": "The email is required",
                    }
                  }
                />
              }
              id="email"
              label="Email"
            />
          </Col>
          <Col
            md={6}
          >
            <FormGroup
              colors={
                Object {
                  "altBackground": "#eff3fe",
                  "background": "#ffffff",
                  "foreground": "#000000",
                  "link": "#3b6cf426",
                }
              }
              control={
                <Unknown
                  control={
                    Object {
                      "defaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldArrayDefaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldsRef": Object {
                        "current": Object {},
                      },
                      "formStateRef": Object {
                        "current": Object {
                          "dirtyFields": Object {},
                          "errors": Object {},
                          "isDirty": false,
                          "isSubmitSuccessful": false,
                          "isSubmitted": false,
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "submitCount": 0,
                          "touchedFields": Object {},
                        },
                      },
                      "getIsDirty": [Function],
                      "inFieldArrayActionRef": Object {
                        "current": false,
                      },
                      "namesRef": Object {
                        "current": Object {
                          "array": Set {},
                          "mount": Set {},
                          "unMount": Set {},
                          "watch": Set {},
                          "watchAll": false,
                        },
                      },
                      "readFormStateRef": Object {
                        "current": Object {
                          "dirtyFields": false,
                          "errors": "all",
                          "isDirty": false,
                          "isValid": false,
                          "isValidating": false,
                          "touchedFields": false,
                        },
                      },
                      "register": [Function],
                      "shouldUnmount": undefined,
                      "subjectsRef": Object {
                        "current": Object {
                          "array": ke {
                            "observers": Array [],
                          },
                          "control": ke {
                            "observers": Array [],
                          },
                          "state": ke {
                            "observers": Array [],
                          },
                          "watch": ke {
                            "observers": Array [],
                          },
                        },
                      },
                      "unregister": [Function],
                      "updateIsValid": [Function],
                      "watchInternal": [Function],
                    }
                  }
                  defaultValue=""
                  name="phoneNumber"
                  render={[Function]}
                  rules={
                    Object {
                      "required": "The phone number is required",
                    }
                  }
                />
              }
              id="phoneNumber"
              label="Phone Number"
            />
          </Col>
        </Row>
        <h3>
          Address
        </h3>
        <FormGroup
          colors={
            Object {
              "altBackground": "#eff3fe",
              "background": "#ffffff",
              "foreground": "#000000",
              "link": "#3b6cf426",
            }
          }
          control={
            <Unknown
              control={
                Object {
                  "defaultValuesRef": Object {
                    "current": Object {},
                  },
                  "fieldArrayDefaultValuesRef": Object {
                    "current": Object {},
                  },
                  "fieldsRef": Object {
                    "current": Object {},
                  },
                  "formStateRef": Object {
                    "current": Object {
                      "dirtyFields": Object {},
                      "errors": Object {},
                      "isDirty": false,
                      "isSubmitSuccessful": false,
                      "isSubmitted": false,
                      "isSubmitting": false,
                      "isValid": false,
                      "isValidating": false,
                      "submitCount": 0,
                      "touchedFields": Object {},
                    },
                  },
                  "getIsDirty": [Function],
                  "inFieldArrayActionRef": Object {
                    "current": false,
                  },
                  "namesRef": Object {
                    "current": Object {
                      "array": Set {},
                      "mount": Set {},
                      "unMount": Set {},
                      "watch": Set {},
                      "watchAll": false,
                    },
                  },
                  "readFormStateRef": Object {
                    "current": Object {
                      "dirtyFields": false,
                      "errors": "all",
                      "isDirty": false,
                      "isValid": false,
                      "isValidating": false,
                      "touchedFields": false,
                    },
                  },
                  "register": [Function],
                  "shouldUnmount": undefined,
                  "subjectsRef": Object {
                    "current": Object {
                      "array": ke {
                        "observers": Array [],
                      },
                      "control": ke {
                        "observers": Array [],
                      },
                      "state": ke {
                        "observers": Array [],
                      },
                      "watch": ke {
                        "observers": Array [],
                      },
                    },
                  },
                  "unregister": [Function],
                  "updateIsValid": [Function],
                  "watchInternal": [Function],
                }
              }
              defaultValue=""
              name="line1"
              render={[Function]}
              rules={
                Object {
                  "required": "The line1 is required",
                }
              }
            />
          }
          id="line1"
          label="Line1"
        />
        <FormGroup
          colors={
            Object {
              "altBackground": "#eff3fe",
              "background": "#ffffff",
              "foreground": "#000000",
              "link": "#3b6cf426",
            }
          }
          control={
            <Unknown
              control={
                Object {
                  "defaultValuesRef": Object {
                    "current": Object {},
                  },
                  "fieldArrayDefaultValuesRef": Object {
                    "current": Object {},
                  },
                  "fieldsRef": Object {
                    "current": Object {},
                  },
                  "formStateRef": Object {
                    "current": Object {
                      "dirtyFields": Object {},
                      "errors": Object {},
                      "isDirty": false,
                      "isSubmitSuccessful": false,
                      "isSubmitted": false,
                      "isSubmitting": false,
                      "isValid": false,
                      "isValidating": false,
                      "submitCount": 0,
                      "touchedFields": Object {},
                    },
                  },
                  "getIsDirty": [Function],
                  "inFieldArrayActionRef": Object {
                    "current": false,
                  },
                  "namesRef": Object {
                    "current": Object {
                      "array": Set {},
                      "mount": Set {},
                      "unMount": Set {},
                      "watch": Set {},
                      "watchAll": false,
                    },
                  },
                  "readFormStateRef": Object {
                    "current": Object {
                      "dirtyFields": false,
                      "errors": "all",
                      "isDirty": false,
                      "isValid": false,
                      "isValidating": false,
                      "touchedFields": false,
                    },
                  },
                  "register": [Function],
                  "shouldUnmount": undefined,
                  "subjectsRef": Object {
                    "current": Object {
                      "array": ke {
                        "observers": Array [],
                      },
                      "control": ke {
                        "observers": Array [],
                      },
                      "state": ke {
                        "observers": Array [],
                      },
                      "watch": ke {
                        "observers": Array [],
                      },
                    },
                  },
                  "unregister": [Function],
                  "updateIsValid": [Function],
                  "watchInternal": [Function],
                }
              }
              defaultValue=""
              name="line2"
              render={[Function]}
            />
          }
          id="line2"
          label="Line2"
        />
        <Row
          noGutters={false}
        >
          <Col
            md={4}
          >
            <FormGroup
              colors={
                Object {
                  "altBackground": "#eff3fe",
                  "background": "#ffffff",
                  "foreground": "#000000",
                  "link": "#3b6cf426",
                }
              }
              control={
                <Unknown
                  control={
                    Object {
                      "defaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldArrayDefaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldsRef": Object {
                        "current": Object {},
                      },
                      "formStateRef": Object {
                        "current": Object {
                          "dirtyFields": Object {},
                          "errors": Object {},
                          "isDirty": false,
                          "isSubmitSuccessful": false,
                          "isSubmitted": false,
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "submitCount": 0,
                          "touchedFields": Object {},
                        },
                      },
                      "getIsDirty": [Function],
                      "inFieldArrayActionRef": Object {
                        "current": false,
                      },
                      "namesRef": Object {
                        "current": Object {
                          "array": Set {},
                          "mount": Set {},
                          "unMount": Set {},
                          "watch": Set {},
                          "watchAll": false,
                        },
                      },
                      "readFormStateRef": Object {
                        "current": Object {
                          "dirtyFields": false,
                          "errors": "all",
                          "isDirty": false,
                          "isValid": false,
                          "isValidating": false,
                          "touchedFields": false,
                        },
                      },
                      "register": [Function],
                      "shouldUnmount": undefined,
                      "subjectsRef": Object {
                        "current": Object {
                          "array": ke {
                            "observers": Array [],
                          },
                          "control": ke {
                            "observers": Array [],
                          },
                          "state": ke {
                            "observers": Array [],
                          },
                          "watch": ke {
                            "observers": Array [],
                          },
                        },
                      },
                      "unregister": [Function],
                      "updateIsValid": [Function],
                      "watchInternal": [Function],
                    }
                  }
                  defaultValue=""
                  name="postalCode"
                  render={[Function]}
                  rules={
                    Object {
                      "required": "The postal code is required",
                    }
                  }
                />
              }
              id="postalCode"
              label="Postal Code"
            />
          </Col>
          <Col
            md={8}
          >
            <FormGroup
              colors={
                Object {
                  "altBackground": "#eff3fe",
                  "background": "#ffffff",
                  "foreground": "#000000",
                  "link": "#3b6cf426",
                }
              }
              control={
                <Unknown
                  control={
                    Object {
                      "defaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldArrayDefaultValuesRef": Object {
                        "current": Object {},
                      },
                      "fieldsRef": Object {
                        "current": Object {},
                      },
                      "formStateRef": Object {
                        "current": Object {
                          "dirtyFields": Object {},
                          "errors": Object {},
                          "isDirty": false,
                          "isSubmitSuccessful": false,
                          "isSubmitted": false,
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "submitCount": 0,
                          "touchedFields": Object {},
                        },
                      },
                      "getIsDirty": [Function],
                      "inFieldArrayActionRef": Object {
                        "current": false,
                      },
                      "namesRef": Object {
                        "current": Object {
                          "array": Set {},
                          "mount": Set {},
                          "unMount": Set {},
                          "watch": Set {},
                          "watchAll": false,
                        },
                      },
                      "readFormStateRef": Object {
                        "current": Object {
                          "dirtyFields": false,
                          "errors": "all",
                          "isDirty": false,
                          "isValid": false,
                          "isValidating": false,
                          "touchedFields": false,
                        },
                      },
                      "register": [Function],
                      "shouldUnmount": undefined,
                      "subjectsRef": Object {
                        "current": Object {
                          "array": ke {
                            "observers": Array [],
                          },
                          "control": ke {
                            "observers": Array [],
                          },
                          "state": ke {
                            "observers": Array [],
                          },
                          "watch": ke {
                            "observers": Array [],
                          },
                        },
                      },
                      "unregister": [Function],
                      "updateIsValid": [Function],
                      "watchInternal": [Function],
                    }
                  }
                  defaultValue=""
                  name="city"
                  render={[Function]}
                  rules={
                    Object {
                      "required": "The city is required",
                    }
                  }
                />
              }
              id="city"
              label="City"
            />
          </Col>
        </Row>
        <FormGroup
          colors={
            Object {
              "altBackground": "#eff3fe",
              "background": "#ffffff",
              "foreground": "#000000",
              "link": "#3b6cf426",
            }
          }
          control={
            <Unknown
              control={
                Object {
                  "defaultValuesRef": Object {
                    "current": Object {},
                  },
                  "fieldArrayDefaultValuesRef": Object {
                    "current": Object {},
                  },
                  "fieldsRef": Object {
                    "current": Object {},
                  },
                  "formStateRef": Object {
                    "current": Object {
                      "dirtyFields": Object {},
                      "errors": Object {},
                      "isDirty": false,
                      "isSubmitSuccessful": false,
                      "isSubmitted": false,
                      "isSubmitting": false,
                      "isValid": false,
                      "isValidating": false,
                      "submitCount": 0,
                      "touchedFields": Object {},
                    },
                  },
                  "getIsDirty": [Function],
                  "inFieldArrayActionRef": Object {
                    "current": false,
                  },
                  "namesRef": Object {
                    "current": Object {
                      "array": Set {},
                      "mount": Set {},
                      "unMount": Set {},
                      "watch": Set {},
                      "watchAll": false,
                    },
                  },
                  "readFormStateRef": Object {
                    "current": Object {
                      "dirtyFields": false,
                      "errors": "all",
                      "isDirty": false,
                      "isValid": false,
                      "isValidating": false,
                      "touchedFields": false,
                    },
                  },
                  "register": [Function],
                  "shouldUnmount": undefined,
                  "subjectsRef": Object {
                    "current": Object {
                      "array": ke {
                        "observers": Array [],
                      },
                      "control": ke {
                        "observers": Array [],
                      },
                      "state": ke {
                        "observers": Array [],
                      },
                      "watch": ke {
                        "observers": Array [],
                      },
                    },
                  },
                  "unregister": [Function],
                  "updateIsValid": [Function],
                  "watchInternal": [Function],
                }
              }
              defaultValue=""
              name="country"
              render={[Function]}
              rules={
                Object {
                  "required": "The country is required",
                }
              }
            />
          }
          id="country"
          label="Country"
        />
        <div
          className="agree-submit"
        >
          <FormGroup
            colors={
              Object {
                "altBackground": "#eff3fe",
                "background": "#ffffff",
                "foreground": "#000000",
                "link": "#3b6cf426",
              }
            }
            control={
              <Unknown
                control={
                  Object {
                    "defaultValuesRef": Object {
                      "current": Object {},
                    },
                    "fieldArrayDefaultValuesRef": Object {
                      "current": Object {},
                    },
                    "fieldsRef": Object {
                      "current": Object {},
                    },
                    "formStateRef": Object {
                      "current": Object {
                        "dirtyFields": Object {},
                        "errors": Object {},
                        "isDirty": false,
                        "isSubmitSuccessful": false,
                        "isSubmitted": false,
                        "isSubmitting": false,
                        "isValid": false,
                        "isValidating": false,
                        "submitCount": 0,
                        "touchedFields": Object {},
                      },
                    },
                    "getIsDirty": [Function],
                    "inFieldArrayActionRef": Object {
                      "current": false,
                    },
                    "namesRef": Object {
                      "current": Object {
                        "array": Set {},
                        "mount": Set {},
                        "unMount": Set {},
                        "watch": Set {},
                        "watchAll": false,
                      },
                    },
                    "readFormStateRef": Object {
                      "current": Object {
                        "dirtyFields": false,
                        "errors": "all",
                        "isDirty": false,
                        "isValid": false,
                        "isValidating": false,
                        "touchedFields": false,
                      },
                    },
                    "register": [Function],
                    "shouldUnmount": undefined,
                    "subjectsRef": Object {
                      "current": Object {
                        "array": ke {
                          "observers": Array [],
                        },
                        "control": ke {
                          "observers": Array [],
                        },
                        "state": ke {
                          "observers": Array [],
                        },
                        "watch": ke {
                          "observers": Array [],
                        },
                      },
                    },
                    "unregister": [Function],
                    "updateIsValid": [Function],
                    "watchInternal": [Function],
                  }
                }
                defaultValue=""
                name="agree"
                render={[Function]}
                rules={
                  Object {
                    "required": "You must agree in order to proceed",
                  }
                }
              />
            }
            id="agree"
            noFeedback={true}
          />
          <Button
            action={
              Object {
                "buttonTestId": "btnSubmit",
                "buttonText": "Next",
                "buttonVariant": "primary",
                "id": "submit",
                "type": "submit",
              }
            }
          />
        </div>
      </Form>
      <Dialog
        actions={
          Array [
            Object {
              "buttonText": "OK",
              "buttonVariant": "primary",
              "callback": [Function],
              "id": "discard",
            },
          ]
        }
        show={false}
        size="lg"
      >
        <React.Fragment>
          The legal officers have been informed of your request.
        </React.Fragment>
      </Dialog>
    </Frame>
  }
  subTitle="Activate my Logion Trust Protection"
  titleIcon={
    Object {
      "background": undefined,
      "icon": Object {
        "hasVariants": true,
        "id": "shield",
      },
    }
  }
/>
`;
